name: Cisco Live 🤖🇳🇱 NSO services delivery

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: 🛠️ Build project
      run: |
        make run-nso-node
        make load-neds
        make load-packages 

  test:
    runs-on: self-hosted
    needs: build
    steps:
    - name: 🤖 Run tests
      run: |
        make prepare-test-network
        make run-tests

  deliver:
    runs-on: self-hosted
    needs: test
    steps:
    - name: 📦 Generate artifacts
      run: |
        make create-artifact-packages
        make create-artifact-tests

    - name: 📦 Upload services artifact
      uses: actions/upload-artifact@v4
      with:
        name: ciscolive_demo_packages
        path: pipeline/preconfigs/ciscolive_demo_packages.tar.gz

    - name: 📦 Upload tests artifact
      uses: actions/upload-artifact@v4
      with:
        name: ciscolive_demo_tests
        path: pipeline/preconfigs/ciscolive_demo_test.tar.gz

  release:
    runs-on: self-hosted
    needs: test
    if: github.ref == 'refs/heads/main' && needs.test.result == 'success'
    steps:
      - name: ⭐️ Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            🏅 NSO rfs packages code release 🏅
          draft: false
          prerelease: false

      - name: ⭐️ Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pipeline/preconfigs/ciscolive_demo_packages.tar.gz
          asset_name: ciscolive_demo_packages.tar.gz
          asset_content_type: application/zip

  cleanup:
    runs-on: self-hosted
    if: always()
    needs: deliver
    steps:
    - name: 🧹 Cleanup resources
      run: make clean